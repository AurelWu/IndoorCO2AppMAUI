<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
xmlns:slider="clr-namespace:Syncfusion.Maui.Sliders;assembly=Syncfusion.Maui.Sliders"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"             
             xmlns:controls="clr-namespace:IndoorCO2App_Multiplatform.Controls"
             xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
             xmlns:mapsui="clr-namespace:Mapsui.UI.Maui;assembly=Mapsui.UI.Maui"
             x:Class="IndoorCO2App_Multiplatform.MainPage">




    <AbsoluteLayout
        x:Name="MainLayout"
        HorizontalOptions="FillAndExpand"
        VerticalOptions="FillAndExpand">

    


        <controls:FixedScrollView 
            x:Name="MainScrollView"
            AbsoluteLayout.LayoutFlags="All"
            AbsoluteLayout.LayoutBounds="0, 0, 1, 1">


            <VerticalStackLayout
            Spacing="22"
            Padding="{OnPlatform iOS='30,50,30,0', Android='30,0,30,0', Default='0,0,0,0'}">
                <!--
            <Label
                Text="Indoor CO2 Recorder"
                SemanticProperties.HeadingLevel="Level1"
                FontSize="Title"
                HorizontalOptions="Center"
                
                /> -->

                <!-- HorizontalStackLayout with 4 buttons -->




                <HorizontalStackLayout x:Name="StatusButtons"
            Spacing="10"
            HorizontalOptions="Center">
                    <ImageButton x:Name="ButtonGPSStatus" Source="gps_icon_v2.png" Clicked="OnRequestGPSEnableDialog"  Aspect="AspectFit" WidthRequest="75" HeightRequest="75" />
                    <ImageButton x:Name="ButtonGPSPermission" Source="gps_icon_permission.png" Clicked="OnRequestGPSPermissionDialog" Aspect="AspectFit" WidthRequest="75" HeightRequest="75" />
                    <ImageButton x:Name="ButtonBluetoothStatus" Source="bluetoothstatus.png" Clicked="OnRequestBluetoothEnableDialog" Aspect="AspectFit" WidthRequest="75" HeightRequest="75" />
                    <ImageButton x:Name="ButtonBluetoothPermissions" Source="bluetoothscan.png" Clicked="OnRequestBluetoothPermissionsDialog" Aspect="AspectFit" WidthRequest="75" HeightRequest="75" />
                </HorizontalStackLayout>


                <Button
                x:Name="QuickGuideButtonTop"
                Text="{Binding [QuickGuideUserManualButton], Source={StaticResource Loc}}"
                SemanticProperties.Hint="Quick Guide Button"
                Clicked="OnShowQuickGuideClicked"
                HorizontalOptions="Center" />


                <HorizontalStackLayout         
                x:Name="CO2MonitorPickerStackLayout"
                Spacing="10"
                VerticalOptions="Start">
                    <Label x:Name="DevicePickerLabel" Text="{Binding [MonitorSelectionLabel], Source={StaticResource Loc}}" FontSize="14" VerticalOptions="Center" />

                    <Border
    BackgroundColor="Transparent"
    Stroke="{SolidColorBrush #808080}"
    StrokeThickness="{OnPlatform iOS=2, Android=0}">
                        <Border.StrokeShape>
                            <RoundRectangle CornerRadius="4"/>
                        </Border.StrokeShape>
                        <Picker x:Name="CO2MonitorPicker" VerticalOptions="Center" HorizontalOptions="FillAndExpand" SelectedIndexChanged="OnCO2MonitorPickerSelectedIndexChanged">
                            <Picker.Items>
                                <x:String>Aranet4</x:String>
                                <x:String>Airvalent</x:String>
                                <x:String>Inkbird IAM-T1</x:String>
                                <x:String>AirSpot Health</x:String>
                            </Picker.Items>
                        </Picker>
                    </Border>
                </HorizontalStackLayout>

                <Label                
                x:Name="StatusLabel"
                Text="Status Text"                
                SemanticProperties.Description="SemanticProperties.Description"
                FontSize="Small"
                LineBreakMode="WordWrap"
                VerticalOptions="StartAndExpand"
                MaxLines="2"
                HorizontalOptions="Start" />

                <Label
                x:Name="DeviceLabel"
                Text="Device Status / Info"                
                SemanticProperties.Description="SemanticProperties.Description"
                FontSize="Small"
                LineBreakMode="WordWrap"
                VerticalOptions="StartAndExpand"
                MaxLines="3"
                HorizontalOptions="Start" >
                    <Label.GestureRecognizers>
                    <TapGestureRecognizer Tapped="OnShowToolTipDeviceIssueClicked" />
                </Label.GestureRecognizers>
                </Label>

                <Label
                x:Name="LocationLabel"
                Text="Location Info"                
                SemanticProperties.Description="SemanticProperties.Description"
                FontSize="Small"
                LineBreakMode="WordWrap"
                VerticalOptions="StartAndExpand"
                MaxLines="2"
                HorizontalOptions="Start">
                    <Label.GestureRecognizers>
                        <TapGestureRecognizer Tapped="OnLocationLabelTapped" />
                    </Label.GestureRecognizers>
                </Label>



                <!--
            <StackLayout 
                x:Name="StackLayoutTrimSliderStart"
                Padding="10">

                
                <Grid Padding="10"
              VerticalOptions="CenterAndExpand"
              HorizontalOptions="FillAndExpand"
              ColumnDefinitions="*,Auto">

                
                    <Slider x:Name="sliderStart"
                    Minimum="0"
                    Maximum="5"
                    Value="0"
                    ValueChanged="OnSliderStartValueChanged"
                    VerticalOptions="Center"
                    HorizontalOptions="FillAndExpand"
                    Grid.Column="0"/>

                
                    <Label x:Name="sliderStartValueLabel"
                   Text="Remove first 0"
                   VerticalOptions="Center"
                   HorizontalOptions="End"
                   Grid.Column="1"/>
                </Grid>

            </StackLayout>
            
            <StackLayout 
                x:Name="StackLayoutTrimSliderEnd"
                Padding="10">


                <Grid Padding="10"
              VerticalOptions="CenterAndExpand"
              HorizontalOptions="FillAndExpand"
              ColumnDefinitions="*,Auto">


                    <Slider x:Name="sliderEnd"
                    Minimum="0"
                    Maximum="5"
                    Value="0"
                    ValueChanged="OnSliderEndValueChanged"
                    VerticalOptions="Center"
                    HorizontalOptions="FillAndExpand"
                    Grid.Column="0"/>


                    <Label x:Name="sliderEndValueLabel"
                   Text="Remove last 0"
                   VerticalOptions="Center"
                   HorizontalOptions="End"
                   Grid.Column="1"/>
                </Grid>

            </StackLayout>
            -->



                <!--
            <ScrollView VerticalScrollBarVisibility="Default">
                <Label x:Name="scrollableDebugText" VerticalOptions="StartAndExpand" HorizontalOptions="FillAndExpand" 
                       Text="Debug Log" 
                       MaxLines="4"
                       />
                
            </ScrollView> -->
                <HorizontalStackLayout x:Name="ButtonBuildingTransitSelectionStackLayout" Padding="10" HorizontalOptions="Center" Spacing="10" >

                    <Button x:Name="ButtonBuildingMode" ClassId="buildingModeButton"  Text="{Binding [TypeSelectionButton_Buildings], Source={StaticResource Loc}}" Clicked="OnLocationModeClicked" TextColor="White" BackgroundColor="#512BD4" />
                    <Button x:Name="ButtonTransitMode" ClassId="transitModeButton" Text="{Binding [TypeSelectionButton_Transit], Source={StaticResource Loc}}" Clicked="OnLocationModeClicked" TextColor="Black" BackgroundColor="LightGray" />

                </HorizontalStackLayout>


                <HorizontalStackLayout
            x:Name="SearchRangeStackLayout"
            Spacing="5"
            VerticalOptions="Start">
                    <Label x:Name="LabelSearchRange" Text="{Binding [SearchRangeLabel], Source={StaticResource Loc}}"  FontSize="14" LineBreakMode="WordWrap" VerticalOptions="Center" />
                    <StackLayout Orientation="Horizontal" Spacing="10" >
                        <!--    <Label Text="50m" HorizontalOptions="Start" VerticalOptions="Center" />
                    <RadioButton x:Name="RadioButton50m" GroupName="SearchRange" VerticalOptions="Center" HorizontalOptions="Start"  CheckedChanged="OnRadioButtonCheckedChanged"  />
                    -->
                        <Label Text=" 100m" HorizontalOptions="Start" VerticalOptions="Center" />
                        <RadioButton x:Name="RadioButton100m" GroupName="SearchRange" VerticalOptions="Center" HorizontalOptions="Start" CheckedChanged="OnRadioButtonCheckedChanged"  />
                        <Label Text=" 250m" HorizontalOptions="Start" VerticalOptions="Center" />
                        <RadioButton x:Name="RadioButton250m" GroupName="SearchRange" VerticalOptions="Center" HorizontalOptions="Start" CheckedChanged="OnRadioButtonCheckedChanged"  />
                    </StackLayout>
                </HorizontalStackLayout>


                <Grid x:Name="LocationUpdateGrid" ColumnDefinitions="3*,1*" HorizontalOptions="Fill" ColumnSpacing="10">
                    <Button
        x:Name="UpdateLocationsButton"
        Text="{Binding [UpdateLocationsButton], Source={StaticResource Loc}}" 
        SemanticProperties.Hint="Update Locations Button"
        Clicked="OnUpdateLocationsClicked"
        HorizontalOptions="Fill"
        Grid.Column="0" />

                    <Button
    x:Name="GetCachedLocationsButton"
    ImageSource="{AppThemeBinding Light='folder_transparent.png', Dark='folder_transparent_dark.png'}"
    Clicked="OnGetCachedLocationsClicked"
    HorizontalOptions="Fill"
    Grid.Column="1" />
                </Grid>


                <Label 
        x:Name="LocationInfoLabel" 
        Text="{Binding [UpdateLocationsButtonDefaultInfoLabel], Source={StaticResource Loc}}" 
        FontSize="14" 
        VerticalOptions="Center" />

                <VerticalStackLayout         
    x:Name="LocationStackLayout"
    Spacing="10"
    VerticalOptions="Start">



                    <Grid 
        ColumnDefinitions="*, Auto" 
        VerticalOptions="Center" 
        HorizontalOptions="Fill">

                        <Border
BackgroundColor="Transparent"
Stroke="{SolidColorBrush #808080}"
StrokeThickness="{OnPlatform iOS=2, Android=0}">
                            <Border.StrokeShape>
                                <RoundRectangle CornerRadius="4"/>
                            </Border.StrokeShape>
                            <!-- Picker in the first column, takes up remaining space -->
                            <Picker 
            x:Name="LocationPicker" 
            Grid.Column="0" 
            HorizontalOptions="FillAndExpand" 
            VerticalOptions="Center" />
                        </Border>
                        <!-- Star Icon Toggle Button in the second column, with fixed width -->
                        <ImageButton 
            x:Name="StarIconToggleBuilding"
            Clicked="OnFavouriteBuildingIconClicked"
            Grid.Column="1" 
            Source="star_icon.png" 
            WidthRequest="30" 
            HeightRequest="30" 
            VerticalOptions="Center"
            HorizontalOptions="End"
            Margin="5,0,0,0"
            BackgroundColor="Transparent" />

                    </Grid>

                </VerticalStackLayout>


                <StackLayout>
                    <toolkit:Expander x:Name="mapViewExpander" IsExpanded="True">
                        <toolkit:Expander.Header>
                            <Label x:Name="mapViewExpanderLabel" Text="{Binding [ShowOnMapFoldOut], Source={StaticResource Loc}}" FontFamily="Arial" FontSize="16" />
                        </toolkit:Expander.Header>
                        <toolkit:Expander.Content>
                            <mapsui:MapView x:Name="mapView" HeightRequest="300" WidthRequest="400"/>
                        </toolkit:Expander.Content>
                    </toolkit:Expander>

                </StackLayout>

                <VerticalStackLayout         
            x:Name="TransitOriginStackLayout"
            Spacing="10"
            VerticalOptions="Start">
                    <Label x:Name="TransitOriginInfoLabel" Text="Select Transit Origin:" FontSize="14" VerticalOptions="Center" />
                    <Grid 
                        ColumnDefinitions="*, Auto" 
                        VerticalOptions="Center" 
                        HorizontalOptions="Fill">
                        <Border
BackgroundColor="Transparent"
Stroke="{SolidColorBrush #808080}"
StrokeThickness="{OnPlatform iOS=2, Android=0}">
                            <Border.StrokeShape>
                                <RoundRectangle CornerRadius="4"/>
                            </Border.StrokeShape>
                            <Picker x:Name="TransitOriginPicker" VerticalOptions="Center" Grid.Column="0" HorizontalOptions="FillAndExpand">
                            </Picker>
                        </Border>
                        <!-- Star Icon Toggle Button in the second column, with fixed width -->
                        <ImageButton 
    x:Name="StarIconToggleTransitOrigin"
    Clicked="OnFavouriteTransitOriginIconClicked"
    Grid.Column="1" 
    Source="star_icon.png" 
    WidthRequest="30" 
    HeightRequest="30" 
    VerticalOptions="Center"
    HorizontalOptions="End"
    Margin="5,0,0,0"
    BackgroundColor="Transparent" />

                    </Grid>
                </VerticalStackLayout>

                <VerticalStackLayout         
            x:Name="TransitDestinationStackLayout"
            Spacing="10"
            VerticalOptions="Start">
                    <Label x:Name="TransitDestinationInfoLabel" Text="Select Transit Destination:" FontSize="14" VerticalOptions="Center" />
                    <Grid 
                         ColumnDefinitions="*, Auto" 
                         VerticalOptions="Center" 
                         HorizontalOptions="Fill">
                        <Border
BackgroundColor="Transparent"
Stroke="{SolidColorBrush #808080}"
StrokeThickness="{OnPlatform iOS=2, Android=0}">
                            <Border.StrokeShape>
                                <RoundRectangle CornerRadius="4"/>
                            </Border.StrokeShape>
                            <Picker x:Name="TransitDestinationPicker" VerticalOptions="Center" Grid.Column="0" HorizontalOptions="FillAndExpand">
                            </Picker>
                        </Border>
                        <ImageButton 
x:Name="StarIconToggleTransitDestination"
Clicked="OnFavouriteTransitDestinationIconClicked"
Grid.Column="1" 
Source="star_icon.png" 
WidthRequest="30" 
HeightRequest="30" 
VerticalOptions="Center"
HorizontalOptions="End"
Margin="5,0,0,0"
BackgroundColor="Transparent" />
                    </Grid>
                </VerticalStackLayout>

                <Grid x:Name="TransitFilterGrid" ColumnSpacing="10" RowSpacing="10" HorizontalOptions="Center">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <Button x:Name="ButtonAll" ClassId="All" Text="{Binding [TypeOfTransitAll], Source={StaticResource Loc}}" Clicked="OnTransitFilterClicked" TextColor="White" BackgroundColor="#512BD4" Grid.Row="0" Grid.Column="0" />
                    <Button x:Name="ButtonBus" ClassId="Bus" Text="{Binding [TypeOfTransitBus], Source={StaticResource Loc}}" Clicked="OnTransitFilterClicked" TextColor="Black" BackgroundColor="LightGray" Grid.Row="0" Grid.Column="1" />
                    <Button x:Name="ButtonTram" ClassId="Tram"  Text="{Binding [TypeOfTransitTram], Source={StaticResource Loc}}" Clicked="OnTransitFilterClicked" TextColor="Black" BackgroundColor="LightGray" Grid.Row="0" Grid.Column="2" />
                    <Button x:Name="ButtonSubway" ClassId="Subway" Text="{Binding [TypeOfTransitSubway], Source={StaticResource Loc}}" Clicked="OnTransitFilterClicked" TextColor="Black" BackgroundColor="LightGray" Grid.Row="1" Grid.Column="0" />
                    <Button x:Name="ButtonLightRail" ClassId="LightRail" Text="{Binding [TypeOfTransitLightrail], Source={StaticResource Loc}}" Clicked="OnTransitFilterClicked" TextColor="Black" BackgroundColor="LightGray" Grid.Row="1" Grid.Column="1" />
                    <Button x:Name="ButtonTrain" ClassId="Train" Text="{Binding [TypeOfTransitTrain], Source={StaticResource Loc}}" Clicked="OnTransitFilterClicked" TextColor="Black" BackgroundColor="LightGray" Grid.Row="1" Grid.Column="2" />
                </Grid>




                <VerticalStackLayout         
    x:Name="TransitLineStackLayout"
    Spacing="10"
    VerticalOptions="Start">

                    <Label 
        x:Name="TransitLineInfoLabel" 
        Text="Select Transit Line:" 
        FontSize="14" 
        VerticalOptions="Center" />

                    <Grid 
        ColumnDefinitions="*, Auto" 
        VerticalOptions="Center" 
        HorizontalOptions="Fill">

                        <!-- Picker in the first column, takes up remaining space -->

                        <Border
BackgroundColor="Transparent"
Stroke="{SolidColorBrush #808080}"
StrokeThickness="{OnPlatform iOS=2, Android=0}">
                            <Border.StrokeShape>
                                <RoundRectangle CornerRadius="4"/>
                            </Border.StrokeShape>
                            <Picker 
            x:Name="TransitLinePicker" 
            Grid.Column="0" 
            HorizontalOptions="FillAndExpand" 
            VerticalOptions="Center" 
                        >

                            </Picker>
                        </Border>

                        <!-- Star Icon Toggle Button in the second column, with fixed width -->
                        <ImageButton 
            x:Name="StarIconToggleTransitLine"
            Clicked="OnFavouriteTransitLineIconClicked"
            Grid.Column="1" 
            Source="star_icon.png" 
            WidthRequest="30" 
            HeightRequest="30" 
            VerticalOptions="Center"
            HorizontalOptions="End"
            Margin="5,0,0,0"
            BackgroundColor="Transparent" />

                    </Grid>

                </VerticalStackLayout>

                <Grid
x:Name="StackLocationTextFilter"
RowDefinitions="40"
ColumnDefinitions="60,*"
RowSpacing="0"
ColumnSpacing="5"
HorizontalOptions="FillAndExpand"
Margin="5">
                    <Label
    VerticalOptions="Center"
    VerticalTextAlignment="Center"
    Text="Filter Lines:"
    Grid.Column="0" />
                    <Border                    
Stroke="{StaticResource Secondary}"
StrokeThickness="2"
Grid.Column="1"
Padding="0">

                        <Entry
    x:Name="TransitLineSearchFilterEditor"  
    VerticalTextAlignment="Start"
    BackgroundColor="Transparent" 
    TextChanged="OnLocationSearchFilterTextChanged"
     Focused="OnEditorFocused"
    Completed="OnEntryCompleted" />
                    </Border>
                </Grid>



                <Button
                x:Name="ResumeRecordingButton"
                Text="Resume Recording"
                SemanticProperties.Hint="Resume Recording Button"
                Clicked="OnResumeRecordingClicked"
                HorizontalOptions="Center" />

                <Button
                x:Name="StartRecordingButton"
                Text="{Binding [StartRecordingButton], Source={StaticResource Loc}}"
                SemanticProperties.Hint="Start Recording Button"
                Clicked="OnStartRecordingClicked"
                HorizontalOptions="Center" />

                <Button
                x:Name="StartManualRecordingButton"
                Text="Start Manual Recording"
                SemanticProperties.Hint="Start Manual Recording Button"
                Clicked="OnStartManualRecordingClicked"
                HorizontalOptions="Center" />

                <Button
                x:Name="StartTransportRecordingButton"
                Text="{Binding [StartTransitRecordingButton], Source={StaticResource Loc}}"
                SemanticProperties.Hint="Start Transport Recording Button"
                Clicked="OnStartTransportRecordingClicked"
                HorizontalOptions="Center" />

                <HorizontalStackLayout
                x:Name="PrerecordingLayout"
                HorizontalOptions="Center">
                    <Label
                    x:Name="PrerecordingLabel"
                    Text="{Binding [Include15mBeforeRecordingToggle], Source={StaticResource Loc}}" 
               VerticalOptions="CenterAndExpand" 
               HorizontalOptions="CenterAndExpand" />

                    <!-- Switch Control -->
                    <Switch x:Name="PrerecordingSwitch"                        
                Toggled="OnPrerecordingSwitchToggled" />
                </HorizontalStackLayout>


                <Button
                x:Name="OpenMapButton"
                Text="{Binding [OpenMapInBrowserButton], Source={StaticResource Loc}}"
                SemanticProperties.Hint="Open the Map in your default Browser"
                Clicked="OnShowMapInBrowserClicked"
                HorizontalOptions="Center" />

                <Button
    x:Name="OpenImprintButton"
    Text="{Binding [DataProtectionAndImprintButton], Source={StaticResource Loc}}"  
                    Clicked="OnImprintClicked"
    FontFamily="fa"
    HorizontalOptions="Center" />

                    <Button
                x:Name="DeleteLastSubmissionButton"
                Text="{Binding [DeletePreviousSubmissionButton], Source={StaticResource Loc}}"
                SemanticProperties.Hint="Shows Dialot to Delete Previous Submission"
                Clicked="OnDeletePreviousClicked"
                HorizontalOptions="Center" />

                <Label
                x:Name="LocationLabelRecording"
                Text="Location: "    
                FontSize="Large"
                SemanticProperties.Description="SemanticProperties.Description"                
                FontAttributes="Bold"
                LineBreakMode="WordWrap"
                VerticalOptions="StartAndExpand"
                MaxLines="2"
                HorizontalOptions="Start" />


                <HorizontalStackLayout
                x:Name="RecordingModeButtonStackLayout"                
                Spacing="10"
                HorizontalOptions="Center"
                VerticalOptions="Start">
                    <Button
                    x:Name="FinishRecordingButton"
                    Text="Submit Data"
                    LineBreakMode="WordWrap"                    
                    SemanticProperties.Hint="FinishRecordingButton"
                    Clicked="OnFinishRecordingClicked"
                    HorizontalOptions="Center" />
                    <Button
                    x:Name="RequestCancelRecordingButton"
                    Text="{Binding [CancelRecordingConfirmationHeadline], Source={StaticResource Loc}}"
                    LineBreakMode="WordWrap"
                    SemanticProperties.Hint="RequestCancelRecordingButton"
                    Clicked="OnRequestCancelRecordingClicked"
                    HorizontalOptions="Center" />
                    <Button
                    x:Name="ConfirmCancelRecordingButton"
                    Text="Confirm Cancel"
                    LineBreakMode="WordWrap"
                    SemanticProperties.Hint="ConfirmCancelRecordingButton"
                    Clicked="OnConfirmCancelRecordingClicked"
                HorizontalOptions="Center" />
                </HorizontalStackLayout>

                <Grid
    x:Name="StackManualName"    
    RowDefinitions="50"
    ColumnDefinitions="50,*"
    RowSpacing="0"
    ColumnSpacing="5"
    HorizontalOptions="FillAndExpand"
    Margin="5">
                    <Label
        VerticalOptions="Center"
        VerticalTextAlignment="Center"
        Text="Name:"
        Grid.Column="0" />
                    <Border                    
    Stroke="{StaticResource Secondary}"
    StrokeThickness="2"
    Grid.Column="1"
    Padding="0">

                        <Editor
        x:Name="ManualNameEditor"  
        VerticalTextAlignment="Start"
        BackgroundColor="Transparent" 
         Focused="OnEditorFocused"
        Completed="OnEntryCompleted" />
                    </Border>
                </Grid>

                <Grid
x:Name="StackManualAddress"    
RowDefinitions="50"
ColumnDefinitions="60,*"
RowSpacing="0"
ColumnSpacing="5"
HorizontalOptions="FillAndExpand"
Margin="5">
                    <Label
    VerticalOptions="Center"
    VerticalTextAlignment="Center"
    Text="Address:"
    Grid.Column="0" />
                    <Border                    
Stroke="{StaticResource Secondary}"
StrokeThickness="2"
Grid.Column="1"
Padding="0">

                        <Editor
    x:Name="ManualAddressEditor"  
    VerticalTextAlignment="Start"
    BackgroundColor="Transparent" 
     Focused="OnEditorFocused"
    Completed="OnEntryCompleted" />
                    </Border>
                </Grid>


                <StackLayout>
                    <controls:LineChartView x:Name="lineChartView"/>
                </StackLayout>


                <Label
                x:Name="RecordedDataLabel"
                Text="Location: "                
                SemanticProperties.Description="SemanticProperties.Description"
                FontSize="Small"
                LineBreakMode="WordWrap"
                VerticalOptions="StartAndExpand"
                MaxLines="1"
                HorizontalOptions="Start" />

                <slider:SfRangeSlider x:Name="TrimSlider" HorizontalOptions ="FillAndExpand"
                                      Margin="0,0" 
	                                  Minimum="1"
                                      Maximum="10"
                                      RangeStart="3"
                                      RangeEnd="7"
                                      ShowTicks="False"
                                      ShowDividers="False"
                                      StepSize="1"
                                      Interval="1"
                                      ValueChanged="OnTrimSliderValueChanged"
                                      ValueChangeEnd="OnTrimSliderValueChanged">

                </slider:SfRangeSlider>
                <!--
            <HorizontalStackLayout Spacing="0" HorizontalOptions="CenterAndExpand" x:Name="TrimSliderLayout" Margin="10,0,10,0" >
                <Slider x:Name="startTrimSlider" MinimumWidthRequest="150" HorizontalOptions="FillAndExpand"  Minimum="0" Maximum="1" Value="0" MinimumTrackColor="{StaticResource Secondary}" MaximumTrackColor="{StaticResource Primary}" ValueChanged="OnSliderStartValueChanged" Margin="0,0,0,0" />
                <Slider x:Name="endTrimSlider" MinimumWidthRequest="150"  HorizontalOptions="FillAndExpand"  Minimum="0" Maximum="1" Value="1" MinimumTrackColor="{StaticResource Primary}" MaximumTrackColor="{StaticResource Secondary}" ValueChanged="OnSliderEndValueChanged"  Margin="0,0,0,0" />
            </HorizontalStackLayout>
            -->

                <Label
                    x:Name="TrimSliderInfoText"
                    HorizontalTextAlignment="Center"
                    HorizontalOptions="Center">
                    <Label.FormattedText>
                        <FormattedString>
                            <Span Text="↑↑↑  ↑↑↑&#10;" />
                            <Span Text="{Binding [SliderInfoLabel], Source={StaticResource Loc}}" />
                        </FormattedString>
                    </Label.FormattedText>
                </Label>

                <Grid
    x:Name="StackNotes"    
    RowDefinitions="Auto" 
    ColumnDefinitions="50,*"
    RowSpacing="0"
    ColumnSpacing="5"
    HorizontalOptions="FillAndExpand"
    Margin="5">

                    <Label
        VerticalOptions="Center"
        VerticalTextAlignment="Center"
        Text="Notes:"
        Grid.Column="0" />

                    <Border                    
        Stroke="{StaticResource Secondary}"
        StrokeThickness="2"
        Grid.Column="1"
        Padding="0"
        HorizontalOptions="FillAndExpand"
        VerticalOptions="FillAndExpand">
                        <!-- Allow border to expand -->

                        <Editor
            x:Name="NotesEditor"  
            VerticalTextAlignment="Start"
            VerticalOptions="StartAndExpand"
            BackgroundColor="Transparent" 
            Focused="OnEditorFocused"
            AutoSize="TextChanges"
            Completed="OnEntryCompleted"
            MinimumHeightRequest="50" />
                        <!-- Set minimum height -->
                    </Border>
                </Grid>
                <HorizontalStackLayout
                x:Name="StackCheckboxesDoor">
                    <Label x:Name="OpenWindowsLabel" Text="{Binding [OpenDoorsWindowsCheckbox], Source={StaticResource Loc}}"
               VerticalOptions="CenterAndExpand" 
               HorizontalOptions="CenterAndExpand" />
                    <CheckBox x:Name="CheckBoxDoorsWindows"
                  CheckedChanged="OnCheckBoxDoorsWindows_CheckedChanged"
                  IsChecked="False"
                  VerticalOptions="CenterAndExpand"
                  HorizontalOptions="CenterAndExpand"/>
                </HorizontalStackLayout>

                <HorizontalStackLayout                
                x:Name="StackCheckboxesVentilation">
                    <Label x:Name="VentilationLabel" Text="{Binding [VentilationSystemCheckBox], Source={StaticResource Loc}}"
                VerticalOptions="CenterAndExpand" 
                HorizontalOptions="CenterAndExpand"/>
                    <CheckBox x:Name="CheckBoxVentilation"
                   IsChecked="False"
                   CheckedChanged="OnCheckBoxVentilation_CheckedChanged"
                   VerticalOptions="CenterAndExpand"
                   HorizontalOptions="CenterAndExpand" />
                </HorizontalStackLayout>

                <Grid
    x:Name="StackDeviceNameFilter"    
    RowDefinitions="50"
    ColumnDefinitions="90,*"
    RowSpacing="0"
    ColumnSpacing="5"
    HorizontalOptions="FillAndExpand"
    Margin="5">
                    <Label
        x:Name="FilterDeviceByNameLabel"
        VerticalOptions="Center"
        VerticalTextAlignment="Center"        
        Text="{Binding [FilterDeviceByNameLabel], Source={StaticResource Loc}}"
        Grid.Column="0" />
                    <Border                    
    Stroke="{StaticResource Secondary}"
    StrokeThickness="2"
    Grid.Column="1"
    Padding="0">

                        <Entry
x:Name="CO2DeviceNameFilterEditor"  
VerticalTextAlignment="Start"
BackgroundColor="Transparent" 
TextChanged="OnDeviceNameFilterValueChanged"
Focused="OnEditorFocused"
Completed="OnEntryCompleted" />
                    </Border>
                </Grid>


                <Button
                x:Name="QuickGuideButtonBottom"
                Text="{Binding [QuickGuideUserManualButton], Source={StaticResource Loc}}"
                SemanticProperties.Hint="Quick Guide Button"
                Clicked="OnShowQuickGuideClicked"
                HorizontalOptions="Center" />

                <Button
    x:Name="DebugLogButton"
    Text="{Binding [CopyDebugLogToClipBoardButton], Source={StaticResource Loc}}"
    SemanticProperties.Hint="Copy Debug Log to Clipboard Button"
    Clicked="OnDebugLogButtonClicked"
    HorizontalOptions="Center" />

                <Button
    x:Name="CrashLogButton"
    Text="{Binding [CopyCrashLogToClipBoardButton], Source={StaticResource Loc}}"
    SemanticProperties.Hint="Copy Debug Log to Clipboard Button"
    Clicked="OnCrashLogButtonClicked"
    HorizontalOptions="Center" />

                <!-- Label to the left of the language dropdown -->
                <HorizontalStackLayout Spacing="10" VerticalOptions="Center">
                    <Label Text="🌐 Language:" VerticalOptions="Center" />
                    <Picker
            x:Name="LanguagePicker"
            Title="Select"
            SelectedIndexChanged="OnLanguagePickerChanged"
            WidthRequest="150">
                        <Picker.Items>
                            <x:String>English</x:String>
                            <x:String>Français</x:String>
                            <x:String>Deutsch</x:String>
                            <x:String>Português</x:String>
                        </Picker.Items>
                    </Picker>
                </HorizontalStackLayout>


                <Label x:Name="VersionLabel" Text="Version: 2024-10-01" FontSize="12" VerticalOptions="Center" />
    

            </VerticalStackLayout>
        </controls:FixedScrollView>

        <BoxView 
    x:Name="TopStroke"
    Color="Black"  
    HeightRequest="8"  
        AbsoluteLayout.LayoutBounds="0, 0, 1, 1"  
    AbsoluteLayout.LayoutFlags="WidthProportional" />
                

        <Label x:Name="SuccessNotificationLabel"
           Text="Transmission Successful"
           BackgroundColor="Green"
           TextColor="White"
           FontSize="Large"
           FontAttributes="Bold"
           HorizontalTextAlignment="Center"
           VerticalTextAlignment="Center"
           AbsoluteLayout.LayoutFlags="All"
           AbsoluteLayout.LayoutBounds="0.5, 0.5, 1, 0.2"
           IsVisible="false"           
           />

    </AbsoluteLayout>


    <ContentPage.Resources>
        <ControlTemplate x:Key="RadioButtonTemplate">
            <Border
            BackgroundColor="#F3F2F1"
            HeightRequest="20"
            HorizontalOptions="Center"
            Stroke="#F3F2F1"
            StrokeShape="RoundRectangle 10"
            StrokeThickness="2"
            VerticalOptions="Center"
            WidthRequest="20">
                <Grid WidthRequest="20">
                    <Grid
                    
                    HeightRequest="18"
                    HorizontalOptions="Center"
                    VerticalOptions="Center"
                    WidthRequest="18">
                        <Ellipse
                        Fill="White"
                        HeightRequest="15"
                        HorizontalOptions="Center"
                        Stroke="Blue"
                        VerticalOptions="Center"
                        WidthRequest="15" />
                        <Ellipse
                        x:Name="check"
                        Fill="Blue"
                        HeightRequest="8"
                        HorizontalOptions="Center"
                        VerticalOptions="Center"
                        WidthRequest="8" />
                    </Grid>
                    <ContentPresenter />
                </Grid>
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroupList>
                        <VisualStateGroup x:Name="CheckedStates">
                            <VisualState x:Name="Checked">
                                <VisualState.Setters>
                                    <Setter Property="Stroke" Value="Blue" />
                                    <Setter TargetName="check" Property="Opacity" Value="1" />
                                </VisualState.Setters>
                            </VisualState>
                            <VisualState x:Name="Unchecked">
                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor" Value="#F3F2F1" />
                                    <Setter Property="Stroke" Value="#F3F2F1" />
                                    <Setter TargetName="check" Property="Opacity" Value="0" />
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateGroupList>
                </VisualStateManager.VisualStateGroups>
            </Border>
        </ControlTemplate>
        <Style TargetType="RadioButton">
            <Setter Property="ControlTemplate" Value="{StaticResource RadioButtonTemplate}" />
        </Style>

    </ContentPage.Resources>


</ContentPage>

