<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CancelRecordingButton" xml:space="preserve">
    <value>Cancel Recording</value>
  </data>
  <data name="CancelRecordingConfirmationBody" xml:space="preserve">
    <value>Are you sure you want to cancel the recording?</value>
  </data>
  <data name="CancelRecordingConfirmationHeadline" xml:space="preserve">
    <value>Cancel Recording</value>
  </data>
  <data name="CopyCrashLogToClipBoardButton" xml:space="preserve">
    <value>Copy Crash Log to Clipboard</value>
  </data>
  <data name="CopyDebugLogToClipBoardButton" xml:space="preserve">
    <value>Copy Debug Log to Clipboard</value>
  </data>
  <data name="DataProtectionAndImprintButton" xml:space="preserve">
    <value>Data Protection Info and Imprint 🔗</value>
  </data>
  <data name="DeletePreviousSubmissionButton" xml:space="preserve">
    <value>Delete Previous Submission</value>
  </data>
  <data name="DeviceInfoLabel_CO2levels" xml:space="preserve">
    <value>CO2 Levels:</value>
  </data>
  <data name="DeviceInfoLabel_UpdateIn" xml:space="preserve">
    <value>Update in: </value>
  </data>
  <data name="FilterDeviceByNameLabel" xml:space="preserve">
    <value>Filter CO2-Monitor by Name:</value>
  </data>
  <data name="Include15mBeforeRecordingToggle" xml:space="preserve">
    <value>include 15m before Recording</value>
  </data>
  <data name="MonitorSelectionLabel" xml:space="preserve">
    <value>select your CO2-Monitor</value>
  </data>
  <data name="NotesLabel" xml:space="preserve">
    <value>Notes:</value>
  </data>
  <data name="OpenDoorsWindowsCheckbox" xml:space="preserve">
    <value>Open Doors / Windows</value>
  </data>
  <data name="OpenMapInBrowserButton" xml:space="preserve">
    <value>Open Map in Browser 🔗</value>
  </data>
  <data name="QuickGuidePopupCloseButton" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="QuickGuidePopupHeadline" xml:space="preserve">
    <value>Quick Guide</value>
  </data>
  <data name="QuickGuidePopupLinkManual" xml:space="preserve">
    <value>User Manual 🔗</value>
  </data>
  <data name="QuickGuidePopupPart1" xml:space="preserve">
    <value>1) if not all icons on the top are green, follow the guidance texts below them or read the manual linked at the bottom</value>
  </data>
  <data name="QuickGuidePopupPart2" xml:space="preserve">
    <value>2) Select your Sensor Type</value>
  </data>
  <data name="QuickGuidePopupPart3" xml:space="preserve">
    <value>3) Press 'Update Locations'</value>
  </data>
  <data name="QuickGuidePopupPart4" xml:space="preserve">
    <value>4) Select the Location you want to measure from the result list</value>
  </data>
  <data name="QuickGuidePopupPart5" xml:space="preserve">
    <value>5) Press 'Start Recording'</value>
  </data>
  <data name="QuickGuidePopupPart6" xml:space="preserve">
    <value>6) Record for at least 5 Minutes (if your sensor is not set to 1 minute update interval it needs to be longer)</value>
  </data>
  <data name="QuickGuidePopupPart7" xml:space="preserve">
    <value>7) Press 'Submit Data'</value>
  </data>
  <data name="QuickGuideUserManualButton" xml:space="preserve">
    <value>Quick Guide / User Manual</value>
  </data>
  <data name="RecordedDataLabel" xml:space="preserve">
    <value>Location:</value>
  </data>
  <data name="SearchRangeLabel" xml:space="preserve">
    <value>Search Range</value>
  </data>
  <data name="ShowOnMapFoldOut" xml:space="preserve">
    <value>Show on map ▼</value>
  </data>
  <data name="SliderInfoLabel" xml:space="preserve">
    <value>Use Sliders to trim start &amp; end if required</value>
  </data>
  <data name="StartRecordingButton" xml:space="preserve">
    <value>Start Recording</value>
  </data>
  <data name="StartTransitRecordingButton" xml:space="preserve">
    <value>Start Transit Recording</value>
  </data>
  <data name="SubmitRecordingButtonNotEnoughData" xml:space="preserve">
    <value>Submit data (needs 5 data points)</value>
  </data>
  <data name="SubmitRecordingButtonOkay" xml:space="preserve">
    <value>Submit data</value>
  </data>
  <data name="TypeOfTransitTrain" xml:space="preserve">
    <value>Train</value>
  </data>
  <data name="TypeOfTransitAll" xml:space="preserve">
    <value>All</value>
  </data>
  <data name="TypeOfTransitBus" xml:space="preserve">
    <value>Bus</value>
  </data>
  <data name="TypeOfTransitTram" xml:space="preserve">
    <value>Tram</value>
  </data>
  <data name="TypeSelectionButton_Buildings" xml:space="preserve">
    <value>Buildings</value>
  </data>
  <data name="TypeSelectionButton_Transit" xml:space="preserve">
    <value>Transit</value>
  </data>
  <data name="UpdateLocationsButton" xml:space="preserve">
    <value>Update Locations</value>
    <comment>Update Locations</comment>
  </data>
  <data name="UpdateLocationsButtonDefaultInfoLabel" xml:space="preserve">
    <value>Press 'Update Locations' to get nearby locations</value>
  </data>
  <data name="UpdateLocationsButtonFoundLocationsLabel" xml:space="preserve">
    <value>Select location:</value>
  </data>
  <data name="UpdateLocationsButtonSearchingInfoLabel" xml:space="preserve">
    <value>currently retrieving nearby locations</value>
  </data>
  <data name="VentilationSystemCheckBox" xml:space="preserve">
    <value>Ventilation System</value>
  </data>
  <data name="TypeOfTransitLightrail" xml:space="preserve">
    <value>Lightrail</value>
  </data>
  <data name="TypeOfTransitSubway" xml:space="preserve">
    <value>Subway</value>
  </data>
  <data name="GPSNotEnabled" xml:space="preserve">
    <value>GPS not enabled |</value>
  </data>
  <data name="LocationPermissionMissing" xml:space="preserve">
    <value>Location permission missing |</value>
  </data>
  <data name="BluetoothNotEnabled" xml:space="preserve">
    <value>Bluetooth not enabled |</value>
  </data>
  <data name="BluetoothPermissionMissing" xml:space="preserve">
    <value>Bluetooth permission not granted, press red button above</value>
  </data>
  <data name="GPSAndBTOkay" xml:space="preserve">
    <value>GPS &amp; Bluetooth permissions and status okay</value>
  </data>
  <data name="DuringFirstGPSLocationUpdate" xml:space="preserve">
    <value>GPS enabled &amp; location permissions granted. Getting location info. Might take a minute</value>
  </data>
  <data name="OutDatedFirmware" xml:space="preserve">
    <value>Sensor found, but the firmware is outdated.\r\nUpdate it using the official Aranet app ⓘ</value>
  </data>
  <data name="DisabledSmarthomeIntegration" xml:space="preserve">
    <value>Sensor found, but 'Smart Home Integration' is disabled.\r\nEnable it using the offical Aranet app ⓘ</value>
  </data>
  <data name="LowCO2Levels" xml:space="preserve">
    <value>| low CO2 Value! Sensor might need recalibration </value>
  </data>
  <data name="FirstUpdate" xml:space="preserve">
    <value>initiating first update in</value>
    <comment>[followed by amount of seconds]</comment>
  </data>
  <data name="WaitingForFirstUpdate" xml:space="preserve">
    <value>waiting for first data from sensor</value>
  </data>
  <data name="PreviousUpdateFailed" xml:space="preserve">
    <value> | previous update failed</value>
  </data>
  <data name="UpdateFailedNextIn" xml:space="preserve">
    <value>update failed - next attempt in: </value>
    <comment>[followed by time til next update in seconds]</comment>
  </data>
  <data name="NoSelectedLocation" xml:space="preserve">
    <value>No location selected</value>
  </data>
  <data name="TransitOrigin" xml:space="preserve">
    <value>Transit origin: </value>
    <comment>[the station/stop where the user entered the moyen de transport</comment>
  </data>
  <data name="NoTransitOriginSelected" xml:space="preserve">
    <value>No transit origin selected</value>
    <comment>shows when the user has not selected a station/stop yet</comment>
  </data>
  <data name="UpdateLocationUsageInfo" xml:space="preserve">
    <value>Press 'Update Locations' to get nearby locations</value>
    <comment>shown below the Update Locations button if it hasnt been used yet</comment>
  </data>
  <data name="NoLocationsInRange" xml:space="preserve">
    <value>No locations in range</value>
    <comment>shown if the location search finds no results within range</comment>
  </data>
  <data name="LocationsFoundStatus" xml:space="preserve">
    <value>Locations Found</value>
  </data>
  <data name="LocationSearchTimeout" xml:space="preserve">
    <value>Update locations request timed out, try again</value>
  </data>
  <data name="HideMapLabel" xml:space="preserve">
    <value>Hide Map ▲</value>
  </data>
  <data name="SubmitRecordingButtonTransitLineMissing" xml:space="preserve">
    <value>Submit data (needs transit line)</value>
  </data>
  <data name="BluetoothInactiveOrPermissionsMissing" xml:space="preserve">
    <value>Bluetooth not enabled or permissions missing, can not fetch sensor data</value>
  </data>
  <data name="DeviceNotYetFound" xml:space="preserve">
    <value>Device not yet found. This might take a while.</value>
  </data>
  <data name="NameFilterInfo" xml:space="preserve">
    <value>Namefilter set to: </value>
  </data>
  <data name="RecoveringInfo" xml:space="preserve">
    <value>Recovering data from sensor. This might take a while.</value>
  </data>
  <data name="UpdateLocationsFailed" xml:space="preserve">
    <value>Update locations request failed, try again</value>
  </data>
  <data name="AlternateLocationInfo" xml:space="preserve">
    <value>trying alternative location service</value>
  </data>
  <data name="RetrievedStored" xml:space="preserve">
    <value>Retrieved locally stored locations</value>
  </data>
  <data name="NoStoredLocations" xml:space="preserve">
    <value>No nearby Locations stored locally</value>
  </data>
  <data name="TransmissionSuccessful" xml:space="preserve">
    <value>Transmission successful!</value>
  </data>
  <data name="FirmwareGuideHeader" xml:space="preserve">
    <value>Updating the Firmware</value>
  </data>
  <data name="FirmwareGuideText1" xml:space="preserve">
    <value>To Update The Firmware follow these steps: \r\n 1) Open the official Aranet Home App (install from App Store if not installed)</value>
  </data>
  <data name="FirmwareGuideText2" xml:space="preserve">
    <value>2) Press the Gears Icon in top right of the sensor</value>
  </data>
  <data name="FirmwareGuideText3" xml:space="preserve">
    <value>3) press the Version number and follow the instructions</value>
  </data>
  <data name="SmarthomeGuideHeader" xml:space="preserve">
    <value>Enabling Smart Home Integration</value>
  </data>
  <data name="SmartHomeGuideText1" xml:space="preserve">
    <value>To read the data from your Aranet4, Smart Home Integration needs to be enabled. \r\n 1) Open the official Aranet Home App (install from App Store if not installed)</value>
  </data>
  <data name="SmartHomeGuideText2" xml:space="preserve">
    <value>2) Press the Gears Icon in top right of the sensor</value>
  </data>
  <data name="SmartHomeGuideText3" xml:space="preserve">
    <value>3) move the Smart Home Integration Slider to the right</value>
  </data>
</root>